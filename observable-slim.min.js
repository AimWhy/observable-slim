/*
 * 	Observable Slim
 * 	Version 0.0.1
 * 	https://github.com/elliotnb/observable-slim
 *
 * 	Licensed under the MIT license:
 * 	http://www.opensource.org/licenses/MIT
 */
var ObservableSlim=function(){var r=[],e=[],o=null,t=function(n,a,u,l){var f=u||null,i=l||"",s=[],p=function(r,e){return r instanceof Array?""!==i?i:e:""!==i?i+"."+e:e},v=function(r){if(!0!==f.paused)if(!0===a)setTimeout(function(){if(r===s.length){for(var e=0;e<f.observers.length;e++)f.observers[e](s);s=[]}},10);else{for(var e=0;e<f.observers.length;e++)f.observers[e](s);s=[]}},b=new Proxy(n,{get:function(r,o){if("object"==typeof r[o]&&null!==r[o]){for(var n=e.length;n--;)if(e[n].target===r[o]&&e[n].observable===f)return e[n].proxy;var u=""!==i?i+"."+o:o;return t(r[o],a,f,u)}return r[o]},deleteProperty:function(r,t){var n=!0;o===b&&(n=!1,o=null);var a=Object.assign({},r),u=p(r,t);if(s.push({type:"delete",target:r,property:t,newValue:null,previousValue:a[t],currentPath:u}),!0===n){for(var l=e.length;l--;)e[l].target===r&&e[l].proxy!==b&&(o=e[l].proxy,delete e[l].proxy[t]);delete r[t]}return v(s.length),!0},set:function(r,t,n,a){var u=!0;if(o===b&&(u=!1,o=null),r[t]!==n||!1===u){var l=p(r,t),f="update";if(void 0===a[t]&&(f="add"),s.push({type:f,target:r,property:t,newValue:n,previousValue:a[t],currentPath:l}),!0===u){for(var i=e.length;i--;)e[i].target===r&&e[i].proxy!==b&&(o=e[i].proxy,e[i].proxy[t]=n);r[t]=n}v(s.length)}return!0}});return null===f&&(f={target:n,domDelay:a,proxy:b,observers:[],paused:!1,path:i},r.push(f)),e.push({target:n,proxy:b,observable:f}),b};return{create:function(r,e,o){var n=t(r,e);return"function"==typeof o&&this.observe(n,o),function r(e){for(var o in e)e.hasOwnProperty(o)&&"object"==typeof e[o]&&r(e[o])}(n),n},observe:function(e,o){for(var t=r.length;t--;)if(r[t].proxy===e){r[t].observers.push(o);break}},pause:function(e){for(var o=r.length,t=!1;o--;)if(r[o].proxy===e){r[o].paused=!0,t=!0;break}if(0==t)throw new Error("ObseravableSlim could not pause observable -- matching proxy not found.")},resume:function(e){for(var o=r.length,t=!1;o--;)if(r[o].proxy===e){r[o].paused=!1,t=!0;break}if(0==t)throw new Error("ObseravableSlim could not resume observable -- matching proxy not found.")},remove:function(o){for(var t=!1,n=!1,a=r.length;a--;)if(r[a].proxy===o){t=!0;break}for(var u=e.length;u--;)if(e[u].proxy===o){n=!0;break}if(!t||!n)throw new Error("ObseravableSlim could not remove observable -- matching proxy not found.");r.splice(a,1),e.splice(u,1)}}}();