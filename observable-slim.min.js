/*
 * 	Observable Slim
 * 	Version 0.0.1
 * 	https://github.com/elliotnb/observable-slim
 *
 * 	Licensed under the MIT license:
 * 	http://www.opensource.org/licenses/MIT
 */
var ObservableSlim=function(){var e=[],r=[],o=[],n=null,t=function(a,l,u,f){var i=u||null,s=f||"",p=[],v=function(e,r){return e instanceof Array?""!==s?s:r:""!==s?s+"."+r:r},b=function(e){if(!0!==i.paused)if(!0===l)setTimeout(function(){if(e===p.length){for(var r=0;r<i.observers.length;r++)i.observers[r](p);p=[]}},10);else{for(var r=0;r<i.observers.length;r++)i.observers[r](p);p=[]}},c=new Proxy(a,{get:function(e,n){if(null!==e[n]&&"object"==typeof e[n]){var a=r.indexOf(e[n]);if(a>-1)for(var u=o[a].length;u--;)if(o[a][u].observable===i)return o[a][u].proxy;var f=""!==s?s+"."+n:n;return t(e[n],l,i,f)}return e[n]},deleteProperty:function(e,t){var a=!0;n===c&&(a=!1,n=null);var l=Object.assign({},e),u=v(e,t);if(p.push({type:"delete",target:e,property:t,newValue:null,previousValue:l[t],currentPath:u}),!0===a){var f=r.indexOf(e);if(f>-1)for(var i=o[f].length;i--;)o[f][i].proxy!==c&&(n=o[f][i].proxy,delete o[f][i].proxy[t]);delete e[t]}return b(p.length),!0},set:function(e,t,a,l){var u=!0;if(n===c&&(u=!1,n=null),e[t]!==a||!1===u){var f=v(e,t),i="update";if(void 0===l[t]&&(i="add"),p.push({type:i,target:e,property:t,newValue:a,previousValue:l[t],currentPath:f}),!0===u){var s=r.indexOf(e);if(s>-1)for(var h=o[s].length;h--;)o[s][h].proxy!==c&&(n=o[s][h].proxy,o[s][h].proxy[t]=a);e[t]=a,"object"==typeof a&&function e(r){for(var o in r)r.hasOwnProperty(o)&&null!==r[o]&&"object"==typeof r[o]&&e(r[o])}(c[t])}b(p.length)}return!0}});null===i&&(i={target:a,domDelay:l,proxy:c,observers:[],paused:!1,path:s},e.push(i));var h={target:a,proxy:c,observable:i},y=r.indexOf(a);return y>-1?o[y].push(h):(r.push(a),o.push([h])),c};return{create:function(e,r,o){var n=t(e,r);return"function"==typeof o&&this.observe(n,o),function e(r){for(var o in r)r.hasOwnProperty(o)&&null!==r[o]&&"object"==typeof r[o]&&e(r[o])}(n),n},observe:function(r,o){for(var n=e.length;n--;)if(e[n].proxy===r){e[n].observers.push(o);break}},pause:function(r){for(var o=e.length,n=!1;o--;)if(e[o].proxy===r){e[o].paused=!0,n=!0;break}if(0==n)throw new Error("ObseravableSlim could not pause observable -- matching proxy not found.")},resume:function(r){for(var o=e.length,n=!1;o--;)if(e[o].proxy===r){e[o].paused=!1,n=!0;break}if(0==n)throw new Error("ObseravableSlim could not resume observable -- matching proxy not found.")},remove:function(n){for(var t=null,a=!1,l=e.length;l--;)if(e[l].proxy===n){t=e[l],a=!0;break}for(var u=o.length;u--;)for(var f=o[u].length;f--;)o[u][f].observable===t&&(o[u].splice(f,1),0==o[u].length&&(o.splice(u,1),r.splice(u,1)));if(!0!==a)throw new Error("ObseravableSlim could not remove observable -- matching proxy not found.");e.splice(l,1)}}}();