/*
 * 	Observable Slim
 * 	Version 0.0.1
 * 	https://github.com/elliotnb/observable-slim
 *
 * 	Licensed under the MIT license:
 * 	http://www.opensource.org/licenses/MIT
 */
var ObservableSlim=function(){var e=[],r=function(t,n,o,u){var a=o||null,s=u||"",l=[],f=function(e,r){return e instanceof Array?""!==s?s:r:""!==s?s+"."+r:r},i=function(r){for(t=e.length;t--;)if(e[t]===a){if(!0===e[t].paused)return;break}if(!0===n)setTimeout(function(){if(r===l.length){for(var e=0;e<a.observers.length;e++)a.observers[e](l);l=[]}},10);else{for(var t=0;t<a.observers.length;t++)a.observers[t](l);l=[]}},v={get:function(e,t){if("object"==typeof e[t]&&null!==e[t]){var o=""!==s?s+"."+t:t;return r(e[t],n,a,o)}return e[t]},deleteProperty:function(e,r){var t=Object.assign({},e),n=f(e,r);return l.push({type:"delete",target:e,property:r,newValue:null,previousValue:t[r],currentPath:n}),delete e[r],i(l.length),!0},set:function(e,r,t,n){if(e[r]!==t){var o=f(e,r),u="update";void 0===n[r]&&(u="add"),l.push({type:u,target:e,property:r,newValue:t,previousValue:n[r],currentPath:o}),e[r]=t,i(l.length)}return!0}},b=new Proxy(t,v);return null===a&&(a={target:t,domDelay:n,observable:b,observers:[],paused:!1},e.push(a)),b};return{create:function(t,n,o){for(var u=e.length;u--;)if(t===e[u].target&&n===e[u].domDelay)return e[u].observers.push(o),e[u].observable;var a=r(t,n);return"function"==typeof o&&this.observe(a,o),a},observe:function(r,t){for(var n=e.length;n--;)if(e[n].observable===r){e[n].observers.push(t);break}},pause:function(r){for(var t=e.length;t--;)if(e[t].observable===r){e[t].paused=!0;break}},resume:function(r){for(var t=e.length;t--;)if(e[t].observable===r){e[t].paused=!1;break}}}}();